basePath: /api/v1
definitions:
  api.Response:
    properties:
      error:
        type: string
      ok:
        type: boolean
      result: {}
    type: object
  gitlab.Commit:
    properties:
      added:
        items:
          type: string
        type: array
      author:
        properties:
          email:
            type: string
          name:
            type: string
        type: object
      id:
        type: string
      message:
        type: string
      modified:
        items:
          type: string
        type: array
      removed:
        items: {}
        type: array
      timestamp:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  gitlab.MergeRequestAction:
    enum:
    - open
    - reopen
    - merge
    - close
    - approved
    - unapproved
    type: string
    x-enum-varnames:
    - MergeRequestActionOpen
    - MergeRequestActionReopen
    - MergeRequestActionMerge
    - MergeRequestActionClose
    - MergeRequestActionApproved
    - MergeRequestActionUnapproved
  gitlab.MergeRequestHook:
    properties:
      changes:
        properties:
          merge_status:
            properties:
              current:
                type: string
              previous:
                type: string
            type: object
        type: object
      event_type:
        type: string
      labels:
        items: {}
        type: array
      object_attributes:
        properties:
          action:
            $ref: '#/definitions/gitlab.MergeRequestAction'
          assignee_id: {}
          assignee_ids:
            items: {}
            type: array
          author_id:
            type: integer
          blocking_discussions_resolved:
            type: boolean
          created_at:
            type: string
          description:
            type: string
          detailed_merge_status:
            type: string
          first_contribution:
            type: boolean
          head_pipeline_id: {}
          human_time_change: {}
          human_time_estimate: {}
          human_total_time_spent: {}
          id:
            type: integer
          iid:
            type: integer
          labels:
            items: {}
            type: array
          last_commit:
            properties:
              author:
                properties:
                  email:
                    type: string
                  name:
                    type: string
                type: object
              id:
                type: string
              message:
                type: string
              timestamp:
                type: string
              title:
                type: string
              url:
                type: string
            type: object
          last_edited_at: {}
          last_edited_by_id: {}
          merge_commit_sha:
            type: string
          merge_error: {}
          merge_params:
            properties:
              force_remove_source_branch: {}
            type: object
          merge_status:
            type: string
          merge_user_id: {}
          merge_when_pipeline_succeeds:
            type: boolean
          milestone_id: {}
          reviewer_ids:
            items: {}
            type: array
          source:
            properties:
              avatar_url: {}
              ci_config_path:
                type: string
              default_branch:
                type: string
              description: {}
              git_http_url:
                type: string
              git_ssh_url:
                type: string
              homepage:
                type: string
              http_url:
                type: string
              id:
                type: integer
              name:
                type: string
              namespace:
                type: string
              path_with_namespace:
                type: string
              ssh_url:
                type: string
              url:
                type: string
              visibility_level:
                type: integer
              web_url:
                type: string
            type: object
          source_branch:
            type: string
          source_project_id:
            type: integer
          state:
            type: string
          state_id:
            type: integer
          target:
            properties:
              avatar_url: {}
              ci_config_path:
                type: string
              default_branch:
                type: string
              description: {}
              git_http_url:
                type: string
              git_ssh_url:
                type: string
              homepage:
                type: string
              http_url:
                type: string
              id:
                type: integer
              name:
                type: string
              namespace:
                type: string
              path_with_namespace:
                type: string
              ssh_url:
                type: string
              url:
                type: string
              visibility_level:
                type: integer
              web_url:
                type: string
            type: object
          target_branch:
            type: string
          target_project_id:
            type: integer
          time_change:
            type: integer
          time_estimate:
            type: integer
          title:
            type: string
          total_time_spent:
            type: integer
          updated_at:
            type: string
          updated_by_id: {}
          url:
            type: string
          work_in_progress:
            type: boolean
        type: object
      object_kind:
        type: string
      project:
        properties:
          avatar_url: {}
          ci_config_path:
            type: string
          default_branch:
            type: string
          description: {}
          git_http_url:
            type: string
          git_ssh_url:
            type: string
          homepage:
            type: string
          http_url:
            type: string
          id:
            type: integer
          name:
            type: string
          namespace:
            type: string
          path_with_namespace:
            type: string
          ssh_url:
            type: string
          url:
            type: string
          visibility_level:
            type: integer
          web_url:
            type: string
        type: object
      repository:
        properties:
          description: {}
          homepage:
            type: string
          name:
            type: string
          url:
            type: string
        type: object
      user:
        properties:
          avatar_url:
            type: string
          email:
            type: string
          id:
            type: integer
          name:
            type: string
          username:
            type: string
        type: object
    type: object
  gitlab.PushRequestHook:
    properties:
      after:
        type: string
      before:
        type: string
      checkout_sha:
        type: string
      commits:
        items:
          $ref: '#/definitions/gitlab.Commit'
        type: array
      event_name:
        type: string
      object_kind:
        type: string
      project:
        properties:
          avatar_url: {}
          default_branch:
            type: string
          description:
            type: string
          git_http_url:
            type: string
          git_ssh_url:
            type: string
          homepage:
            type: string
          http_url:
            type: string
          id:
            type: integer
          name:
            type: string
          namespace:
            type: string
          path_with_namespace:
            type: string
          ssh_url:
            type: string
          url:
            type: string
          visibility_level:
            type: integer
          web_url:
            type: string
        type: object
      project_id:
        type: integer
      ref:
        type: string
      repository:
        properties:
          description:
            type: string
          git_http_url:
            type: string
          git_ssh_url:
            type: string
          homepage:
            type: string
          name:
            type: string
          url:
            type: string
          visibility_level:
            type: integer
        type: object
      total_commits_count:
        type: integer
      user_avatar:
        type: string
      user_email:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
      user_username:
        type: string
    type: object
info:
  contact:
    name: Fadeyev Artyom
    url: https://github.com/fadyat
  description: This is a sample server Hooks API.
  license:
    name: MIT
    url: https://github.com/fadyat/hooks/blob/master/LICENSE
  termsOfService: https://swagger.io/terms/
  title: Hooks API
  version: 0.1.0
paths:
  /api/v1/asana/merge:
    post:
      consumes:
      - application/json
      description: Creates a comment for the merge request actions.
      parameters:
      - description: Gitlab event
        in: header
        name: X-Gitlab-Event
        required: true
        type: string
      - description: Gitlab token
        in: header
        name: X-Gitlab-Token
        required: true
        type: string
      - description: Gitlab request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/gitlab.PushRequestHook'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
  /api/v1/asana/push:
    post:
      consumes:
      - application/json
      description: Update last commit info, in custom field or creating a comment
      parameters:
      - description: Gitlab event
        in: header
        name: X-Gitlab-Event
        required: true
        type: string
      - description: Gitlab token
        in: header
        name: X-Gitlab-Token
        required: true
        type: string
      - description: Gitlab request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/gitlab.PushRequestHook'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
  /api/v1/gitlab/sync_description:
    post:
      consumes:
      - application/json
      description: Update merge request description with the task info
      parameters:
      - description: Gitlab event
        in: header
        name: X-Gitlab-Event
        required: true
        type: string
      - description: Gitlab token
        in: header
        name: X-Gitlab-Token
        required: true
        type: string
      - description: Gitlab request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/gitlab.MergeRequestHook'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
  /api/v1/ping:
    get:
      responses:
        "200":
          description: pong
          schema:
            type: string
      tags:
      - example
schemes:
- http
- https
swagger: "2.0"
